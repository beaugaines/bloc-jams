_absolute vs relative positioning_

Css positioning is concerned with the 'normal flow' - how the elements in your html are displayed onscreen by default.  By default block elements stack one on top of the next, starting in the upper left corner of the containing element.  Absolute positioning allows you to specify that an element 'opt out' of the normal flow and take a a precise position on page, irrespective of any of the other elements on the page.  That absolute position consists of one or more positional properties - top, right, bottom, and left - that define where the element should lie, relative to the top left corner of the page.  Elements with relative positioning can take the same offset properties - but while absolute positioning uses the document as the context for placement, an element with relative positioning uses the _containing element_ as the context.


_how does `box_sizing: border-box` treat contained content differently from the default browser `box-sizing`_?

With the browser default `box-sizing` (which is: `box-sizing: content-box`), when you add padding to an element, its overall width and height increase.  With `box-sizing: border-box`, the overall height and width of the element _do not_ increase.  Any margin, padding, or border 'eat in' to the containing element rather than expanding out.

- look into - what exactly are pseudo elements?

